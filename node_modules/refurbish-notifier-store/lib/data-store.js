var _ = require('lodash');
var path = require('path');
var log = require('refurbish-notifier-logger')('data-store');
var fs = require('fs');
var storeDir = path.join(__dirname, '/../../../', 'store.json');

log.debug('Store directory - ', storeDir);

var storedData = {};
var fieldsToCompare = ['uid', 'price'];


function save(data) {
	storedData = data;
	fs.writeFile(storeDir, JSON.stringify(data, null, 4), function(err) {
		if (err) {
			return log.error('Write store', err);
		}
		log.info('Data saved to file');
	});
}

function load() {
	fs.readFile(storeDir, function(err, data) {
		if (err) {
			return log.error('Read store', err);
		}
		try {
			storedData = JSON.parse(data.toString());
		} catch(e) {
			return log.error('JSON parse error: ', e);
		}
		log.info('Data loaded from file');
	});
}

function searchBy(el) {
	var obj = {};
	_.each(fieldsToCompare, function(key) {
		obj[key] = el[key];
	});
	return obj;
}

function isExist(item) {
	var index = _.findKey(storedData, searchBy(item));
	return index >= 0;
}

function notEqual(data) {
	var hasDiff = false;
	_.each(data, function(item) {
		if (!isExist(item)) {
			// console.lo(item);
			item.__withDiff = true;
			hasDiff = true;
		}
	});
	if (hasDiff) {
		save(data);
	}

	return hasDiff;
}


load();

module.exports = {
	data: function() {
		return _.sortByOrder(storedData, ['origReleased', 'price'], [false, true]);
	},
	notEqual: notEqual
};

var Vow = require('vow');
var log = require('refurbish-notifier-logger')('RefurbishNotifierParser');
var cheerio = require('cheerio');
var _ = require('lodash');
var moment = require('moment');
var url = require('url');
var urlResolve = url.resolve;

var helpers = require('refurbish-notifier-helpers');
var http = helpers.httpPromise;

function RefurbishNotifierParser(options) {
	this.url = options.url;
}

function toNum(val) {
	return val ? parseFloat(val.replace(/[^\d^.]+/gi, '')) : 0;
}

function extractData(el) {
	var item = {};

	// Извлекаем номер лота и адрес страницы
	var elUrl = el.find('.specs a');
	var href = elUrl[0].attribs.href;
	item.uid = href.match(/^\/us\/product\/([0-9A-Z]+)\//)[1];
	item.url = urlResolve('http://store.apple.com/', href);

	// Наименование продукта
	item.name = _.trim(elUrl.html());

	// Описание
	var specs = el.find('.specs');
	specs.find('h3').remove();
	specs.find('p').remove();
	item.description = _.trim(specs.text());

	// Дата производства
	var releasedText = item.description.split('\n')[0];
	var date = releasedText.match(/\w+ \d+/);
	item.origReleased2 = date[0];
	item.origReleased = moment(date[0], 'MMMM YYYY')._d;

	// Извлекаем цену в USD
	item.price = toNum(el.find('.price').text());

	// Показатели скидки
	var savings = el.find('.savings').text();
	savings = _.map(savings.split('\n'), function(el) {
		return _.trim(el);
	});
	savings = _.compact(savings);
	item.saveVal = toNum(savings[0]);
	item.savePer = toNum(savings[1]);

	// Извлекаем адрес картинки
	var img = el.find('.product img.ir')
	item.productImageUrl = img[0] ? img[0].attribs.src : '';

	return item;
}


RefurbishNotifierParser.prototype.parse = function() {
	var promise = Vow.promise();
	var refurbishParser = this;
	http.get(this.url)
		.then(function(res) {
			log.info('Get %s, status: %s', res.url, res.statusCode);
			log.debug('Headers:', JSON.stringify(res.headers));
			// Парсим страницу
			var html = cheerio.load(res.body);
			var elems = html('.product');
			log.debug('Parser find %s products on page', elems.length);
			var data = _.reduce(elems, function(result, el) {
				result.push(extractData(html(el)));
				return result;
			}, []);
			promise.fulfill(data);
		})
		.fail(function(e) {
			promise.reject(e);
		});
	return promise;
};

module.exports = RefurbishNotifierParser;

// http://store.apple.com/us/browse/home/specialdeals/mac/macbook_pro/13
/*var grabber = new RefurbishNotifierParser({
	url: 'http://store.apple.com/us/browse/home/specialdeals/mac/macbook_pro/13'
});

grabber.parse()
	.then(function(items) {
		_.each(items, function(item) {
			console.log(item);
		});
	})
	.fail(function(e) {
		log.error(e);
	});*/

// http.createServer(function(){}).listen(3000)
